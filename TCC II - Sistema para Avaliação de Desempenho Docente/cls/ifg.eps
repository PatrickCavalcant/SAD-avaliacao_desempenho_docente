%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 27 270 255 329 
%%LanguageLevel: 2
%%Creator: CorelDRAW X7
%%Title: IFGTCC.eps
%%CreationDate: Fri Feb 05 09:57:46 2016
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW X7 Versão 17.0.0.491
/EpsFile true def
%%BeginResource: procset wCorel17Dict 17.0 0
/wCorel17Dict 300 dict def wCorel17Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Text support
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch 0 1 $fe length 1 sub{/encodingIndex xd dup
$fe encodingIndex get eq{$fe encodingIndex/.notdef put}if}for put 1 add}ifelse
}forall pop}if dup 256 dict dup/$met xd/Metrics exch put dup/FontMatrix get 0
get 1000 mul 1 exch div 3 index length 256 eq{0 1 255{dup $fe exch get dup
/.notdef eq{pop pop}{5 index 3 -1 roll get 2 index mul $met 3 1 roll put}
ifelse}for}if pop definefont pop pop}bd/CorelIsValidCharpath{pathbbox 3 -1 roll
sub abs 0.5 ge 3 1 roll sub abs 0.5 ge and}bd/@ftx{{currentpoint 3 -1 roll(0)
dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix
CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/gradient_fill ld @ftx}{$fil 3 eq{/@@txt
/@Pf ld @ftx}{$fil 4 eq{/@@txt/output_shading_gradient ld @ftx}{FillOverprint
safe_setoverprint FillColor/separate_set_color dexec{show}{pop}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix
currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint
safe_setoverprint OutlineColor/separate_set_color dexec{{currentpoint 3 -1 roll
(0)dup 3 -1 roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat
stroke @gr @np stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr
@st}bd/@t@a{dup @gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}
def}bd/o{/t{pop}def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm
setmatrix/$ttm matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll
m $ttm concat ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd
/@l{}bd/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null
def/_bithibyte 0 def
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel17Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%BeginResource: font OpenSans-Bold
%!FontType1-1.0: OpenSans-Bold 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /OpenSans-Bold def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 73 /I putdup 78 /N putdup 83 /S putdup 84 /T putdup 85 /U putdup 79 /O putdup 32 /space putdup 70 /F putdup 69 /E putdup 68 /D putdup 82 /R putdup 65 /A putdup 76 /L putdup 67 /C putdup 199 /Ccedilla putdup 195 /Atilde putdup 44 /comma putdup 202 /Ecircumflex putdup 71 /G putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B19F5B347C2DACE2405A8E6A0AD51E7876BF3D5B7E97B47E97430DA5D7ABC1951A69AB1B6214B640A36B9A8
B7A51A52ACCDB1146E2C99470C2ADA695FBB717A1B2B743EA7200880B6CC33B8D08682534E57CB014D4021F0889E84BF2FB340E13EF0582DEBAC8260A38F13AE
334C64218653661F11251FD20BFA55744CDD122EBA8CE1008F361ADDABC3F661617934D79A92A093EDE3B7B1E15AF5474777178AA99D8E5FBAC458864BED8B87
0CC08710CCE05FE034940585F733C2E835CD4D4370C3BB8F4426D5A900675260095CB0229EA0791EE880A7359A9059845564D838AD8E276A8AAC4C2BF389E3B7
E4180FF6F10D89DF06FB7E76F077C604B256CF45CF342108F9C1B835FFC5973094DB52806A38D6190A9F7D5573E5E8CDDF50DD74568D00AF3C2F5709A9A259C1
F126810B58E35A67B6FB841237BF44A8D43B7C17241B468B12B24866219654DCA236D026B9C522D8F4D90FD2B40C817ECAC062D78E75218D745FAA5E8B7FECDC
8C81F36220D8972ED3A85A729C1F5355D040E31D454F4EFD10B4AE2EFA7BD955F4D4BCF299589BDE728C654A1AC80BA6EEA3F8E4104F7F0751C27350D22A8FE3
D9BB4BDD711A4C53C2C9F4361325C6EC06C422ACFDC7871BDA257F0CAE434D6C67B14B4C9BCED857834E4470305FDA1DA2C91C9EF37404D5ED57BBCA8404A7F6
32C20370FC9FAFCF0101AA5FBD80B854C0EC0C70A9042379EF412CA9EDF3F969DD8B93551F309F8E41699E920706E0EEC544E39CE32504CBD856A9C7F9134F00
1196E38BC22A3F8B18636C5520862F92B773DC6EDF41546616592DC4CA9820E033B865D3205BE24355CF5699A4A9225220F9214B5CB675CE56D33D0C9061E8E8
551602FB3624D14C0BA5445B5D1B0DB9E2A92C510C9E7EF5E5ED44E38B85A341492651B66862EFB4E4E7C1208F1DE905FDBA4DD22C02F38C281947E73621EE20
F9D1C971C2823898CCBCA663E5A5C93252A2E9081DA71F6AD2E62AD147E0987AF08F2C9E4A6D674D59C9BF9E2956EB406F756CCB6941F05AAFDACD7502F4432F
30F5A605F61473E5AE8E75AEA98957896C571D24AECC83FCF58216D0D4D0EFAF1489476C417F5105D4524191B5CE1F214D98928C296F85482B3B6A42E627F226
1B25614F7733A72FCF77CBD4FE2E4AD8742D5E8656C61778A946C26E5012B87BB7A7EDDDA8DCFE28CD2B1916163AC6BCBD88EB9A8D02811BCF5F55F35A072A6D
4822D555F3731CFD0EB186214DF182A7180266B2A9D87F2EBE701F1B9AF8B7638D7C72742591AA735E590D8ED2F593D6483EE52EFDF373CC838A160BABC0F94E
FC36C377EBDF041F02DE8BF2DBC553B9954BFBD5AFD8FF22AC061EBA8332B32FDDE6D6BEFF3B58E67074DD56C326E87DA16D827A2907455F513643852DC31B9C
D46BA06CDDBC409A6F5B077612B133903843420E8A6DC9ED1E11850CB56A434BF95DEEB03D3E3B8656398850B455FC71E513305DA5CBD29A972B96ADA6EF5244
449F926EF38D6D391B95940B5B140EA5E437EA7894E6D608F943F661832E998701A788D6370F7ADE4761700EE251F9DF08EADFF38566BC6D82839149044738CB
771C02BB29021A04F43587C61FBD2656552C7DE990E85949998971EB396052F2829C32974DE66944031EACCD29ABCB1F31A18FF6DD670A51DED710FA6EACF527
184CAB57C5D2FFAEABB4413768B1D69895A6B81D64AEF9E4846671B29BF2C1F30B9DBC633CB0574CE83A74A32005FF05E9DB0F9A788E8D69F5F803E879B80E16
939934F28B12EB7044E8061311254A4F1DAF3688D30077B6AECFD7D9134D53B00DA3CC40B05AB9C74070055D8029DD35B9ADFE7544BD5AE1EC1094888B075320
EFF473B0E35633A0A5B27CAC9B3DE9E783DFFADD5BDD4BF8FBDF2C2F5AF2BB987C2C13B0CF27294ADF4A366667051CF57502EB6C2C9194A8086BAA7EAD2647D8
F51C5460CFA02783F23406175FA8666AF706AA46649653CF5B3697F4B868212BC94260DCABF7E53D54C11AF8A912EF34E2BAF94BAFA065DAF6B9BC19982DA148
89811622093473C20B7BAE5F0F058D0F14423051714525600ADFE4685E5117E26FD0B767FF1C075F35AB7146B1F97FD2511801A81AA23AC907551E7EC2485D78
0F9C88667BD5C650A33764C3652B5F30BBC13D5A49B75A865D01B2FF709B142A4FA0D4CC4DD449435638699B3775EBC3006F9FA0752EEC3C08B52D1DE0C17ED6
BB55DB505A41105C6A5A46C6D037F3CD0A64A8E578A17FB2FE997D74A0D88A6BCF5BF28B4CF4726B9A7C40C1764334EADC8B5E99D94AAC99DE6131697CBD5EBD
970ECABD76EEEDE766B8F105EAA769956C6F13CFA2643E027D51B3029CD6AE8511E66E068C1149FD70D5A1FF28FA7BAA5791A3B6EF8B90C6007A547854EFE7F3
6F269168594AC1AFD1515737533B86EDB40EEEF26833411D012D046BFBEFA9CE338F94A03BC6CC3B892C8E1E5C34A4729CE6BC5EC0A99AC83E860FD734038FA5
D78AD74757551EEAD4922AA5F745ED45407BE3E4199E8BFB22E7C2063CE3BE647ED193D9AB19E27ED7316608E1A813D6A9A0E950A8B1961E212D34509928D6E0
DE7F8CC831AC8ED4713A8F894341CF2F6CF014A0A5FD456F46F55B2AEBEB8A63DF4F18A9DE8BB0584486E10ABDCA5DA8A26D1724878BEBA2F26E978172103469
F028ADC6D3502593B932CB1771D2C887A0EF1732AC4EC30106DE2DFE74891A85FEB1DDE24991184B41EB2B72DC06D18216F7504AF3431BC9E576797A3F731B34
4A1BEC31C7526EE50C9E0C4867AAAE925EE9E42CA7B7C25DE9B774A3412ED9168F467F4AE77F626CA7A8DD2D24CD3F8BE6A39E46CD6BB7AAC59B328E09805724
EF70BF0149126547AF22104D474EE76C6CE23DF86BE4F2ABCAFB7DC7F4275BE40373FFABD98BC33049F97C930A82E33C1FE70442B3B2A801B274504856780339
8F93CB95C8D679D4D7D8449637EC6241D1ACBD859607DD3ED8C81A7C7E0D9BC38FA5761C79B7BD9D62F909050EC2938F3464CEAADE48E08A4C62DE87BF9E1014
A89BCE8C5353EF37C0F49E4FC54789927A7DB4E6C3C694E7D673E4C57969ADF2015DA90421224FB6D07A4C43EEEF7094928BC1C378E617E01EB437582784C83A
D510F206A755976E17E5A23B4B6ED1B7402B2F06597B790AC181FC4B46E1AE4F97
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 260 
286 472 646 571 901 750 266 339 339 545 571 290 322 285 413 571 
571 571 571 571 571 571 571 571 571 285 290 571 571 571 477 897 
690 672 637 740 560 549 724 765 331 331 664 565 943 813 796 628 
796 660 551 579 756 650 967 667 624 579 331 413 331 532 411 607 
604 633 514 633 591 387 565 657 305 305 620 305 982 657 619 633 
633 454 497 434 657 569 856 578 569 488 394 551 394 571 600 571 
600 291 571 518 855 516 526 607 1281 551 368 973 600 579 600 600 
217 217 445 445 376 500 1000 607 749 497 368 978 600 488 624 260 
286 571 571 571 571 551 486 607 832 383 615 571 322 832 500 428 
571 379 379 607 660 655 285 205 379 388 615 881 881 881 477 690 
690 690 690 690 690 952 637 560 560 560 560 331 331 331 331 740 
813 796 796 796 796 796 571 796 756 756 756 756 624 628 711 604 
604 604 604 604 604 917 514 591 591 591 591 305 305 305 305 619 
657 619 619 619 619 619 571 619 657 657 657 657 569 633 569 ]
CorelDrawReencodeVect /_R12132237-OpenSans-Bold /OpenSans-Bold Z

%%BeginResource: font OpenSans
%!FontType1-1.0: OpenSans 001.003%%Creator: Corel PostScript Engine10 dict begin/FontName /OpenSans def/PaintType 0 def/FontType 1 def/FontMatrix [0.001 0 0 0.001 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 71 /G putdup 111 /o putdup 105 /i putdup 225 /aacute putdup 115 /s putreadonly def/FontBBox {0 0 0 0} readonly defcurrentdict endcurrentfile eexec
A22DD33CB9A1B84FC323D538B9AE6C6014672C02872FAD31037218C4EC2B7124C58AFC4A0E2584B50A778936CFE1053450FEC35486F87A4DA48EF5124EE42DE6
9DDB8A5C33C2868DDADC1C9B4725483A678DFD1BEF77D7BDC50D39DB17FF02031F39030455C675716EB1B292EA6078E9937BB936698E457C365396CC5708EAAB
921AD0271E16D4A5F1689C7D8DEDA69051F9EA8B689EDEA8949F2C93CE777268FD3CE5D1713388D0E33A640C77DFB1D300C88E302BEFDF0083AF060D407FD007
23D3F76465C679461FC0471E7F6EFFFCB5A8E513C1661D98B93E8667005CB8B30093BCB089336AFAB7D61973B6F27AC993F52C52238826E221A63575C2C867DB
E9C0264C99B65994DB79F83B4627E129923C7C8B2B1C0F881A068D7C32C5C642F2828829120487C40B425B5748CEFE9A2A19C3877345FF4DA996D4A7603187E3
52EC25DEAF5B6B986A143043EEAD2C010F5B1C7EC46A10E3958FF8F9A5DDDBAD9832CA32952BC2A31051D08B5D3D635249D9AE515E40CE11AD750F64AF6C6B2B
5EB6F1B0BB5503A27BC46BCB4045421CA82B73E601758ABB6EAF5FA3EF6D8D00FE14CEF71ED856F243509CD6DF998D974A62776E70E9B4DC13AD8EFFD3475FCB
606BD0980219B479FBB34179E7D044717827CB0C271618E9D144A97A2FE89C7583850993B4E01CABA5E650416F2525C4E714D06966A1BFCD75289640CCC24998
7A0180ACF1A387037F4CCBF4DCF1E348A6831E549053AB1FE6A63254542F80D078E004AA4A693AA628F4AA81EC6AFBF05CFFB71185C84D7942F7054C78105CD0
6985AE689E6649D900D91B3DCF9FC6D687DE67F7F7A7127D99805AA42B3F046078843BE277C924B34FEBD9E50B9DEE6377C8955E3278E13A985242ADE6F35A42
5ADFF70A6B3B5BDE8B298F309D2B1546DFA6D249ED6A4D9F7B5F2203C49D0E5595705DE22DBF058B37888E7DB114E42D639A8B5D914D6B8FAEB14C031571F18B
1307DC2E2AAA2905DC1DBED721B3B92A0A476BB9DAEA3690D2C21F27141AAE202508CA347D348DF6C1843CE787DE6D636E0DC839C1A36B014BAFB367DA7DC644
2D779A7AA0350B7A1AAEAF46F1EA38490A9097AA71330E98E75F4AD27872B148C979FA493F94C737A3ACD2E09D245A8E825B7CE89947F4F3748281DDA4562281
A2E6040589FB7D16F5A10E216D7531EEC6695979C698D361BDC29BB923B7BCCDA5B9D12F5022A0F37D5B84E0BE9553E7E34E5563FE167D593084DFEE8055F034
63547490318AFD020E086DDEA1E2269B4058CEC27ED9337EA0A16A5B307289047B14A2DDFE301C7328C545EB027C99C330621572D37EE287A57BD4D24D2C1F7F
6A86822C17EAA279037998E489BBF117F6987CA859828C3ECC6E7EA545D6711CF214B5B5B8294A8DB3A64AEE912FF4B7A1160CC533B9AB2948EC515FD4C0EB48
0DB675E1A4CFE7D99426A58533A5D42ED2FBCB86947F0DA6918C9D08000FA1D0050A2F96B372099A551B8C33601B78785967AFB0BEAE4C93903ECB2C835085B0
A917E56340E1218AAD36FB231C1C7F9F0EABC11D4A2DA556CF0FC96A25D69513BC98086375D08486C69B0B48147EE423EADCF2190C5D3995B1757F67A9F55167
269CCA546989EB176391F6266D794D16F93A0DBE81DABFD4DC3E50688CB7DEF42330C26A78E0C82A96B692C31A2A44F01A2ED521DA7D28D00F3B22D8AAF8680B
E90A77206E9F22C0D3E13A6B3816DC33163EC07977C9034A943AC0D556D4028FCEB68668074B9DC612F498A65748C2310C2FBECB4976A15CE8AEB4B8618AC45D
26BC
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%EndResource
[ 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 260 
267 401 646 572 823 730 221 296 296 552 572 245 322 266 367 572 
572 572 572 572 572 572 572 572 572 266 266 572 572 572 429 899 
633 648 631 729 556 516 728 738 279 267 614 519 903 754 779 602 
779 618 549 553 728 595 926 577 560 571 329 367 329 542 448 577 
556 613 476 613 561 339 548 614 253 253 525 253 930 614 604 613 
613 408 477 353 614 501 778 524 504 468 379 551 379 572 600 590 
600 245 577 405 784 502 510 592 1202 549 304 923 600 571 600 600 
170 170 350 350 376 500 1000 592 776 477 304 942 600 468 560 260 
267 572 572 572 572 551 516 577 832 354 497 572 322 832 500 428 
572 347 347 577 619 655 266 227 347 375 497 780 780 780 429 633 
633 633 633 633 633 873 631 556 556 556 556 279 279 279 279 722 
754 779 779 779 779 779 572 779 728 728 728 728 560 611 622 556 
556 556 556 556 556 858 476 561 561 561 561 253 253 253 253 596 
614 604 604 604 604 604 572 604 614 614 614 614 504 613 504 ]
CorelDrawReencodeVect /_R12134016-OpenSans /OpenSans Z

%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 612 792
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax 72.06548 300.46082 161.63348 307.17723 @E
[0.00028395 0.00000000 0.00000000 0.00028346 71.24314961 300.55209449] @tm
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
e
/_R12132237-OpenSans-Bold 32237.00000 z
0 0 (INS) @t
54958 0 (TIT) @t
102648 0 (U) @t
127336 0 (T) @t
145362 0 (O F) @t
197409 0 (EDERA) @t
301224 0 (L) @t
T
@rax 72.06548 287.93197 245.86469 298.63276 @E
[0.00028395 0.00000000 0.00000000 0.00028346 71.24314961 290.12513386] @tm
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
e
/_R12132237-OpenSans-Bold 32237.00000 z
0 0 (DE) @t
50618 0 (EDUCA) @t
159037 0 (\307\303) @t
201176 0 (O) @t
225864 0 (,) @t
241989 0 (CI\312NCI) @t
348993 0 (A E) @t
406048 0 (TEC) @t
463634 0 (NOL) @t
533067 0 (OGIA) @t
T
@rax %Note: Object
47.39301 311.00060 56.05483 319.66243 @E
/$fm 0 def
 0 O 0 @g
0.1961 0.6275 0.2549  create_rgb_color set_solid_fill
56.05483 311.81783 m
56.05483 311.32743 55.64636 311.00060 55.23761 311.00060 C
48.21024 311.00060 L
47.71984 311.00060 47.39301 311.40907 47.39301 311.81783 C
47.39301 318.84520 L
47.39301 319.33559 47.80148 319.66243 48.21024 319.66243 C
55.23761 319.66214 L
55.72800 319.66214 56.05483 319.25367 56.05483 318.84491 C
56.05483 311.81783 L
@c
F

@rax %Note: Object
57.85228 311.00060 66.51411 319.66243 @E
/$fm 0 def
 0 O 0 @g
0.1961 0.6275 0.2549  create_rgb_color set_solid_fill
66.51411 311.81783 m
66.51411 311.32743 66.10564 311.00060 65.69688 311.00060 C
58.66951 311.00060 L
58.17912 311.00060 57.85228 311.40907 57.85228 311.81783 C
57.85228 318.84520 L
57.85228 319.33559 58.26076 319.66243 58.66951 319.66243 C
65.69688 319.66214 L
66.18728 319.66214 66.51411 319.25367 66.51411 318.84491 C
66.51411 311.81783 L
@c
F

@rax %Note: Object
57.85228 290.08233 66.51411 298.74416 @E
/$fm 0 def
 0 O 0 @g
0.1961 0.6275 0.2549  create_rgb_color set_solid_fill
66.51411 290.89956 m
66.51411 290.40917 66.10564 290.08233 65.69688 290.08233 C
58.66951 290.08233 L
58.17912 290.08233 57.85228 290.49080 57.85228 290.89956 C
57.85228 297.92693 L
57.85228 298.41732 58.26076 298.74416 58.66951 298.74416 C
65.69688 298.74387 L
66.18728 298.74387 66.51411 298.33540 66.51411 297.92665 C
66.51411 290.89956 L
@c
F

@rax %Note: Object
36.93402 300.62324 45.59556 309.28507 @E
/$fm 0 def
 0 O 0 @g
0.1961 0.6275 0.2549  create_rgb_color set_solid_fill
45.59556 301.44047 m
45.59556 300.95008 45.18709 300.62324 44.77833 300.62324 C
37.75124 300.62324 L
37.26085 300.62324 36.93402 301.03172 36.93402 301.44047 C
36.93402 308.46784 L
36.93402 308.95824 37.34249 309.28507 37.75124 309.28507 C
44.77833 309.28479 L
45.26872 309.28479 45.59556 308.87631 45.59556 308.46756 C
45.59556 301.44047 L
@c
F

@rax %Note: Object
47.39301 300.62324 56.05483 309.28507 @E
/$fm 0 def
 0 O 0 @g
0.1961 0.6275 0.2549  create_rgb_color set_solid_fill
56.05483 301.44047 m
56.05483 300.95008 55.64636 300.62324 55.23761 300.62324 C
48.21024 300.62324 L
47.71984 300.62324 47.39301 301.03172 47.39301 301.44047 C
47.39301 308.46784 L
47.39301 308.95824 47.80148 309.28507 48.21024 309.28507 C
55.23761 309.28479 L
55.72800 309.28479 56.05483 308.87631 56.05483 308.46756 C
56.05483 301.44047 L
@c
F

@rax %Note: Object
36.93402 290.08233 45.59556 298.74416 @E
/$fm 0 def
 0 O 0 @g
0.1961 0.6275 0.2549  create_rgb_color set_solid_fill
45.59556 290.89956 m
45.59556 290.40917 45.18709 290.08233 44.77833 290.08233 C
37.75124 290.08233 L
37.26085 290.08233 36.93402 290.49080 36.93402 290.89956 C
36.93402 297.92693 L
36.93402 298.41732 37.34249 298.74416 37.75124 298.74416 C
44.77833 298.74387 L
45.26872 298.74387 45.59556 298.33540 45.59556 297.92665 C
45.59556 290.89956 L
@c
F

@rax %Note: Object
47.39301 290.08233 56.05483 298.74416 @E
/$fm 0 def
 0 O 0 @g
0.1961 0.6275 0.2549  create_rgb_color set_solid_fill
56.05483 290.89956 m
56.05483 290.40917 55.64636 290.08233 55.23761 290.08233 C
48.21024 290.08233 L
47.71984 290.08233 47.39301 290.49080 47.39301 290.89956 C
47.39301 297.92693 L
47.39301 298.41732 47.80148 298.74416 48.21024 298.74416 C
55.23761 298.74387 L
55.72800 298.74387 56.05483 298.33540 56.05483 297.92665 C
56.05483 290.89956 L
@c
F

@rax %Note: Object
36.93402 279.62306 45.59556 288.28488 @E
/$fm 0 def
 0 O 0 @g
0.1961 0.6275 0.2549  create_rgb_color set_solid_fill
45.59556 280.44028 m
45.59556 279.94989 45.18709 279.62306 44.77833 279.62306 C
37.75124 279.62306 L
37.26085 279.62306 36.93402 280.03153 36.93402 280.44028 C
36.93402 287.46765 L
36.93402 287.95805 37.34249 288.28488 37.75124 288.28488 C
44.77833 288.28460 L
45.26872 288.28460 45.59556 287.87613 45.59556 287.46737 C
45.59556 280.44028 L
@c
F

@rax %Note: Object
47.39301 279.62306 56.05483 288.28488 @E
/$fm 0 def
 0 O 0 @g
0.1961 0.6275 0.2549  create_rgb_color set_solid_fill
56.05483 280.44028 m
56.05483 279.94989 55.64636 279.62306 55.23761 279.62306 C
48.21024 279.62306 L
47.71984 279.62306 47.39301 280.03153 47.39301 280.44028 C
47.39301 287.46765 L
47.39301 287.95805 47.80148 288.28488 48.21024 288.28488 C
55.23761 288.28460 L
55.72800 288.28460 56.05483 287.87613 56.05483 287.46737 C
56.05483 280.44028 L
@c
F

@rax %Note: Object
36.44362 310.51020 46.08595 320.15254 @E
/$fm 0 def
 0 O 0 @g
0.7843 0.0980 0.1176  create_rgb_color set_solid_fill
46.08595 315.33137 m
46.08595 312.71669 43.96139 310.51020 41.26479 310.51020 C
38.65011 310.51020 36.44362 312.63477 36.44362 315.33137 C
36.44362 317.94605 38.56819 320.15254 41.26479 320.15254 C
43.87975 320.15254 46.08595 318.02797 46.08595 315.33137 C
@c
F

@rax 71.83247 279.64772 96.08910 287.13005 @E
[0.00028395 0.00000000 0.00000000 0.00028346 71.24314961 279.74409449] @tm
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
e
/_R12134016-OpenSans 34016.00000 z
0 0 (Goi\341s) @t
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel17Dict 17.0 0
%%+ font OpenSans-Bold
%%+ font OpenSans
%%EOF
